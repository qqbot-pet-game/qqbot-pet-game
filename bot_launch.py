# -*- coding: utf-8 -*-# Code by Yinzo:        https://github.com/Yinzo# Origin repository:    https://github.com/Yinzo/SmartQQBotimport sysimport getoptfrom MsgHandler import QQ, MsgHandlerbot_params = {    "debug": False,    "pid": 0,    "config_path": None,    "qrcode_path": None,    "login_retry_time": 10}def bot_launch(sys_paras):    bot = QQ(sys_paras)    if not bot.login_by_qrcode(): return (None, None)    bot_handler = MsgHandler(bot)    return (bot, bot_handler)def bot_loop(bot, bot_handler):    while 1:        try:            new_msg = bot.check_msg()            if new_msg is not None:                bot_handler.handle(new_msg)        except socket.timeout, e:            logging.warning("check msg timeout, retrying...")            continue        except Exception, e:            logging.warning("handle message error retry")            bot_handler = MsgHandler(bot)            continueif __name__ == '__main__':    reload(sys)    sys.setdefaultencoding("utf-8")    options, args = getopt.getopt(sys.argv[1:], "dp:c:q:t:", ['debug', 'pid=', 'config-path=', 'qrcode-path=', 'login-retry-time='])    for k,v in options:        if k in ['-d', '--debug']:            bot_params['debug'] = True        elif k in ['-p', '--pid']:            bot_params['pid'] = v        elif k in ['-c', '--config-path']:            bot_params['config_path'] = v        elif k in ['-q', '--qrcode-path']:            bot_params['qrcode_path'] = v        elif k in ['-t', '--login-retry-time'] and v.isdigit():            bot_params['login_retry_time'] = int(v)    (bot, bot_handler) = bot_launch(bot_params)    if not bot is None and not bot_handler is None:        bot_loop(bot, bot_handler)